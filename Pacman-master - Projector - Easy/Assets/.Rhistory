barplot(turnSum$number, main = "Turn Type Breakdown", xlab = "Turn Type", ylab = "Turn Counts", names.arg = c("Up/Right", "Down/Right", "Up/Left", "Down/Left", "Up/Straight", "Down/Straight", "Right/Straight", "Left/Straight"), col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), axes = TRUE, cex.names = 0.55)
finalTime = length(df$time)
finalData = rbind(finalData, df$time[finalTime])
colnames(finalData) = "Total Time (seconds)"
plot(finalData[,1], finalData$y, main = "Play Duration per Trial", xlab = "Trial", ylab = "Duration (seconds)")
aggregateTime = rbind(aggregateTime, mean(turnData$time))
colnames(aggregateTime) = "Average Turn Time (seconds)"
plot(aggregateTime[,1], aggregateTime$y, main = "Average Time Required to Turn", xlab = "Trial", ylab = "Duration (seconds)")
}
dataIndex = 0;
finalData = data.frame("Total Time")
finalData = subset(finalData, finalData$`Total Time (seconds)` != "Total Time")
aggregateTime = data.frame("Average Time")
aggregateTime = subset(aggregateTime, aggregateTime$X.Average.Time. != "Average Time")
dataPath = paste("Kim_04_02_22_middlerandom_right_data", dataIndex,".txt", sep = "")
if(file.exists(dataPath))
{
df = read.table(dataPath, header = TRUE)
dataIndex = dataIndex + 1;
}
i = 1
while(i < length(df$x) - 1)
{
if(df$x[i] == df$x[i + 1] & df$y[i] == df$y[i + 1])
{
delete_col = df$time[i + 1]
df = subset(df, df$time!= delete_col)
}
else
{
i = i + 1
}
}
turnData = data.frame("turn", "time", row.names = 1)
turnData = subset(turnData, turnData$turn != "turn")
upRight = 0
downRight = 0
upLeft = 0
downLeft = 0
upStraight = 0
downStraight = 0
rightStraight = 0
leftStraight = 0
dataIndex = 0;
finalData = data.frame("Total Time")
finalData = subset(finalData, finalData$`Total Time (seconds)` != "Total Time")
aggregateTime = data.frame("Average Time")
aggregateTime = subset(aggregateTime, aggregateTime$X.Average.Time. != "Average Time")
while(file.exists(paste("Kim_04_02_22_Outermaze_right_data", dataIndex,".txt", sep = "")))
{
df = read.table(paste("Kim_04_02_22_Outermaze_right_data", dataIndex,".txt", sep = ""), header = TRUE)
dataIndex = dataIndex + 1;
i = 1
while(i < length(df$x) - 1)
{
if(df$x[i] == df$x[i + 1] & df$y[i] == df$y[i + 1])
{
delete_col = df$time[i + 1]
df = subset(df, df$time!= delete_col)
}
else
{
i = i + 1
}
}
turnData = data.frame("turn", "time", row.names = 1)
turnData = subset(turnData, turnData$turn != "turn")
upRight = 0
downRight = 0
upLeft = 0
downLeft = 0
upStraight = 0
downStraight = 0
rightStraight = 0
leftStraight = 0
plot(df$x, df$y, xlim = c(1,27), ylim = c(2,30), type = "S", xlab = "X-Position", ylab = "Y-Position", main = "Path")
i = 1
while(i <= length(df$x))
{
points(df$x[i], df$y[i])
i = i + 1
}
i = 1
while(i < length(df$x) - 1)
{
if(df$x[i + 2] - df$x[i] >= 1 & df$y[i + 2] - df$y[i] >= 1)
{
points(df$x[i + 1], df$y[i + 1], col = "red")
turnData = rbind(turnData, c("Up/Right", df$time[i + 2] - df$time[i]))
upRight = upRight + 1
}
else if(df$x[i + 2] - df$x[i] >= 1 & df$y[i + 2] - df$y[i] <= -1)
{
points(df$x[i + 1], df$y[i + 1], col = "orange")
turnData = rbind(turnData, c("Down/Right", df$time[i + 2] - df$time[i]))
downRight = downRight + 1
}
else if(df$x[i + 2] - df$x[i] <= -1 & df$y[i + 2] - df$y[i] >= 1)
{
points(df$x[i + 1], df$y[i + 1], col = "yellow")
turnData = rbind(turnData, c("Up/Left", df$time[i + 2] - df$time[i]))
upLeft = upLeft + 1
}
else if(df$x[i + 2] - df$x[i] <= -1 & df$y[i + 2] - df$y[i] <= -1)
{
points(df$x[i + 1], df$y[i + 1], col = "green")
turnData = rbind(turnData, c("Down/Left", df$time[i + 2] - df$time[i]))
downLeft = downLeft + 1
}
else if(df$x[i + 2] == df$x[i] & df$y[i + 2] == df$y[i])
{
if(df$y[i] > df$y[i + 1])
{
#Up turn
points(df$x[i + 1], df$y[i + 1], col = "blue")
turnData = rbind(turnData, c("Up/Straight", df$time[i + 2] - df$time[i]))
upStraight = upStraight + 1
}
else if(df$y[i] < df$y[i + 1])
{
#Down turn
points(df$x[i + 1], df$y[i + 1], col = "purple")
turnData = rbind(turnData, c("Down/Straight", df$time[i + 2] - df$time[i]))
downStraight = downStraight + 1
}
else if(df$x[i] > df$x[i + 1])
{
#Right turn
points(df$x[i + 1], df$y[i + 1], col = "pink")
turnData = rbind(turnData, c("Right/Straight", df$time[i + 2] - df$time[i]))
rightStraight = rightStraight + 1
}
else if(df$x[i] < df$x[i + 1])
{
#Left turn
points(df$x[i + 1], df$y[i + 1], col = "brown")
turnData = rbind(turnData, c("Left/Straight", df$time[i + 2] - df$time[i]))
leftStraight = leftStraight + 1
}
}
i = i + 1
}
legend(20, 30, legend = c("Up/right turn", "Down/right turn", "Up/left turn", "Down/left turn", "Up/straight turn", "Down/straight turn", "Right/straight turn", "Left/straight turn"), col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), lty = 1, cex = 0.75)
colnames(turnData) = c("turn", "time")
turnData$time = as.numeric(turnData$time)
turnData$turn = as.factor(turnData$turn)
#text(df$x, df$y, labels = df$time)
plot(turnData, main = "Temporal Distribution of Turns per Trial", ylab = "Time (seconds)", xlab = "Turn Type", col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), cex.axis = 0.55)
turnSum = data.frame("turn" = c("up/right", "down/right", "up/left", "down/left", "up/straight", "down/straight", "right/straight", "left/straight"), "number" = c(upRight, downRight, upLeft, downLeft, upStraight, downStraight, rightStraight, leftStraight), row.names = 1)
barplot(turnSum$number, main = "Turn Type Breakdown", xlab = "Turn Type", ylab = "Turn Counts", names.arg = c("Up/Right", "Down/Right", "Up/Left", "Down/Left", "Up/Straight", "Down/Straight", "Right/Straight", "Left/Straight"), col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), axes = TRUE, cex.names = 0.55)
finalTime = length(df$time)
finalData = rbind(finalData, df$time[finalTime])
colnames(finalData) = "Total Time (seconds)"
plot(finalData[,1], finalData$y, main = "Play Duration per Trial", xlab = "Trial", ylab = "Duration (seconds)")
aggregateTime = rbind(aggregateTime, mean(turnData$time))
colnames(aggregateTime) = "Average Turn Time (seconds)"
plot(aggregateTime[,1], aggregateTime$y, main = "Average Time Required to Turn", xlab = "Trial", ylab = "Duration (seconds)")
}
dataPath = paste("DOESNTCOUNT_data", dataIndex,".txt", sep = "")
if(file.exists(dataPath))
{
df = read.table(dataPath, header = TRUE)
dataIndex = dataIndex + 1;
}
dataIndex = 0;
finalData = data.frame("Total Time")
finalData = subset(finalData, finalData$`Total Time (seconds)` != "Total Time")
aggregateTime = data.frame("Average Time")
aggregateTime = subset(aggregateTime, aggregateTime$X.Average.Time. != "Average Time")
dataPath = paste("DOESNTCOUNT_data", dataIndex,".txt", sep = "")
if(file.exists(dataPath))
{
df = read.table(dataPath, header = TRUE)
dataIndex = dataIndex + 1;
}
dataIndex = 0;
finalData = data.frame("Total Time")
finalData = subset(finalData, finalData$`Total Time (seconds)` != "Total Time")
aggregateTime = data.frame("Average Time")
aggregateTime = subset(aggregateTime, aggregateTime$X.Average.Time. != "Average Time")
while(file.exists(paste("DOESNTCOUNT_data", dataIndex,".txt", sep = "")))
{
df = read.table(paste("DOESNTCOUNT_data", dataIndex,".txt", sep = ""), header = TRUE)
dataIndex = dataIndex + 1;
i = 1
while(i < length(df$x) - 1)
{
if(df$x[i] == df$x[i + 1] & df$y[i] == df$y[i + 1])
{
delete_col = df$time[i + 1]
df = subset(df, df$time!= delete_col)
}
else
{
i = i + 1
}
}
turnData = data.frame("turn", "time", row.names = 1)
turnData = subset(turnData, turnData$turn != "turn")
upRight = 0
downRight = 0
upLeft = 0
downLeft = 0
upStraight = 0
downStraight = 0
rightStraight = 0
leftStraight = 0
plot(df$x, df$y, xlim = c(1,27), ylim = c(2,30), type = "S", xlab = "X-Position", ylab = "Y-Position", main = "Path")
i = 1
while(i <= length(df$x))
{
points(df$x[i], df$y[i])
i = i + 1
}
i = 1
while(i < length(df$x) - 1)
{
if(df$x[i + 2] - df$x[i] >= 1 & df$y[i + 2] - df$y[i] >= 1)
{
points(df$x[i + 1], df$y[i + 1], col = "red")
turnData = rbind(turnData, c("Up/Right", df$time[i + 2] - df$time[i]))
upRight = upRight + 1
}
else if(df$x[i + 2] - df$x[i] >= 1 & df$y[i + 2] - df$y[i] <= -1)
{
points(df$x[i + 1], df$y[i + 1], col = "orange")
turnData = rbind(turnData, c("Down/Right", df$time[i + 2] - df$time[i]))
downRight = downRight + 1
}
else if(df$x[i + 2] - df$x[i] <= -1 & df$y[i + 2] - df$y[i] >= 1)
{
points(df$x[i + 1], df$y[i + 1], col = "yellow")
turnData = rbind(turnData, c("Up/Left", df$time[i + 2] - df$time[i]))
upLeft = upLeft + 1
}
else if(df$x[i + 2] - df$x[i] <= -1 & df$y[i + 2] - df$y[i] <= -1)
{
points(df$x[i + 1], df$y[i + 1], col = "green")
turnData = rbind(turnData, c("Down/Left", df$time[i + 2] - df$time[i]))
downLeft = downLeft + 1
}
else if(df$x[i + 2] == df$x[i] & df$y[i + 2] == df$y[i])
{
if(df$y[i] > df$y[i + 1])
{
#Up turn
points(df$x[i + 1], df$y[i + 1], col = "blue")
turnData = rbind(turnData, c("Up/Straight", df$time[i + 2] - df$time[i]))
upStraight = upStraight + 1
}
else if(df$y[i] < df$y[i + 1])
{
#Down turn
points(df$x[i + 1], df$y[i + 1], col = "purple")
turnData = rbind(turnData, c("Down/Straight", df$time[i + 2] - df$time[i]))
downStraight = downStraight + 1
}
else if(df$x[i] > df$x[i + 1])
{
#Right turn
points(df$x[i + 1], df$y[i + 1], col = "pink")
turnData = rbind(turnData, c("Right/Straight", df$time[i + 2] - df$time[i]))
rightStraight = rightStraight + 1
}
else if(df$x[i] < df$x[i + 1])
{
#Left turn
points(df$x[i + 1], df$y[i + 1], col = "brown")
turnData = rbind(turnData, c("Left/Straight", df$time[i + 2] - df$time[i]))
leftStraight = leftStraight + 1
}
}
i = i + 1
}
legend(20, 30, legend = c("Up/right turn", "Down/right turn", "Up/left turn", "Down/left turn", "Up/straight turn", "Down/straight turn", "Right/straight turn", "Left/straight turn"), col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), lty = 1, cex = 0.75)
colnames(turnData) = c("turn", "time")
turnData$time = as.numeric(turnData$time)
turnData$turn = as.factor(turnData$turn)
#text(df$x, df$y, labels = df$time)
plot(turnData, main = "Temporal Distribution of Turns per Trial", ylab = "Time (seconds)", xlab = "Turn Type", col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), cex.axis = 0.55)
turnSum = data.frame("turn" = c("up/right", "down/right", "up/left", "down/left", "up/straight", "down/straight", "right/straight", "left/straight"), "number" = c(upRight, downRight, upLeft, downLeft, upStraight, downStraight, rightStraight, leftStraight), row.names = 1)
barplot(turnSum$number, main = "Turn Type Breakdown", xlab = "Turn Type", ylab = "Turn Counts", names.arg = c("Up/Right", "Down/Right", "Up/Left", "Down/Left", "Up/Straight", "Down/Straight", "Right/Straight", "Left/Straight"), col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), axes = TRUE, cex.names = 0.55)
finalTime = length(df$time)
finalData = rbind(finalData, df$time[finalTime])
colnames(finalData) = "Total Time (seconds)"
plot(finalData[,1], finalData$y, main = "Play Duration per Trial", xlab = "Trial", ylab = "Duration (seconds)")
aggregateTime = rbind(aggregateTime, mean(turnData$time))
colnames(aggregateTime) = "Average Turn Time (seconds)"
plot(aggregateTime[,1], aggregateTime$y, main = "Average Time Required to Turn", xlab = "Trial", ylab = "Duration (seconds)")
}
dataIndex = 0;
finalData = data.frame("Total Time")
finalData = subset(finalData, finalData$`Total Time (seconds)` != "Total Time")
aggregateTime = data.frame("Average Time")
aggregateTime = subset(aggregateTime, aggregateTime$X.Average.Time. != "Average Time")
dataPath = paste("Kim_04_02_22_middlerandom_right_data", dataIndex,".txt", sep = "")
if(file.exists(dataPath))
{
df = read.table(dataPath, header = TRUE)
dataIndex = dataIndex + 1;
}
i = 1
while(i < length(df$x) - 1)
{
if(df$x[i] == df$x[i + 1] & df$y[i] == df$y[i + 1])
{
delete_col = df$time[i + 1]
df = subset(df, df$time!= delete_col)
}
else
{
i = i + 1
}
}
turnData = data.frame("turn", "time", row.names = 1)
turnData = subset(turnData, turnData$turn != "turn")
upRight = 0
downRight = 0
upLeft = 0
downLeft = 0
upStraight = 0
downStraight = 0
rightStraight = 0
leftStraight = 0
plot(df$x, df$y, xlim = c(1,27), ylim = c(2,30), type = "S",
xlab = "X-Position", ylab = "Y-Position", main = "Path")
i = 1
while(i <= length(df$x))
{
points(df$x[i], df$y[i])
i = i + 1
}
i = 1
while(i < length(df$x) - 1)
{
if(df$x[i + 2] - df$x[i] >= 1 & df$y[i + 2] - df$y[i] >= 1)
{
points(df$x[i + 1], df$y[i + 1], col = "red")
turnData = rbind(turnData, c("Up/Right", df$time[i + 2] - df$time[i]))
upRight = upRight + 1
}
else if(df$x[i + 2] - df$x[i] >= 1 & df$y[i + 2] - df$y[i] <= -1)
{
points(df$x[i + 1], df$y[i + 1], col = "orange")
turnData = rbind(turnData, c("Down/Right", df$time[i + 2] - df$time[i]))
downRight = downRight + 1
}
else if(df$x[i + 2] - df$x[i] <= -1 & df$y[i + 2] - df$y[i] >= 1)
{
points(df$x[i + 1], df$y[i + 1], col = "yellow")
turnData = rbind(turnData, c("Up/Left", df$time[i + 2] - df$time[i]))
upLeft = upLeft + 1
}
else if(df$x[i + 2] - df$x[i] <= -1 & df$y[i + 2] - df$y[i] <= -1)
{
points(df$x[i + 1], df$y[i + 1], col = "green")
turnData = rbind(turnData, c("Down/Left", df$time[i + 2] - df$time[i]))
downLeft = downLeft + 1
}
else if(df$x[i + 2] == df$x[i] & df$y[i + 2] == df$y[i])
{
if(df$y[i] > df$y[i + 1])
{
#Up turn
points(df$x[i + 1], df$y[i + 1], col = "blue")
turnData = rbind(turnData, c("Up/Straight", df$time[i + 2] - df$time[i]))
upStraight = upStraight + 1
}
else if(df$y[i] < df$y[i + 1])
{
#Down turn
points(df$x[i + 1], df$y[i + 1], col = "purple")
turnData = rbind(turnData, c("Down/Straight", df$time[i + 2] - df$time[i]))
downStraight = downStraight + 1
}
else if(df$x[i] > df$x[i + 1])
{
#Right turn
points(df$x[i + 1], df$y[i + 1], col = "pink")
turnData = rbind(turnData, c("Right/Straight", df$time[i + 2] - df$time[i]))
rightStraight = rightStraight + 1
}
else if(df$x[i] < df$x[i + 1])
{
#Left turn
points(df$x[i + 1], df$y[i + 1], col = "brown")
turnData = rbind(turnData, c("Left/Straight", df$time[i + 2] - df$time[i]))
leftStraight = leftStraight + 1
}
}
i = i + 1
}
legend(20, 30, legend = c("Up/right turn", "Down/right turn", "Up/left turn", "Down/left turn", "Up/straight turn", "Down/straight turn", "Right/straight turn", "Left/straight turn"), col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), lty = 1, cex = 0.75)
colnames(turnData) = c("turn", "time")
turnData$time = as.numeric(turnData$time)
turnData$turn = as.factor(turnData$turn)
#text(df$x, df$y, labels = df$time)
dataIndex = 0;
finalData = data.frame("Total Time")
finalData = subset(finalData, finalData$`Total Time (seconds)` != "Total Time")
aggregateTime = data.frame("Average Time")
aggregateTime = subset(aggregateTime, aggregateTime$X.Average.Time. != "Average Time")
while(file.exists(paste("Kim_04_02_22_Outermaze_right_data", dataIndex,".txt", sep = "")))
{
df = read.table(paste("Kim_04_02_22_Outermaze_right_data", dataIndex,".txt", sep = ""), header = TRUE)
dataIndex = dataIndex + 1;
i = 1
while(i < length(df$x) - 1)
{
if(df$x[i] == df$x[i + 1] & df$y[i] == df$y[i + 1])
{
delete_col = df$time[i + 1]
df = subset(df, df$time!= delete_col)
}
else
{
i = i + 1
}
}
turnData = data.frame("turn", "time", row.names = 1)
turnData = subset(turnData, turnData$turn != "turn")
upRight = 0
downRight = 0
upLeft = 0
downLeft = 0
upStraight = 0
downStraight = 0
rightStraight = 0
leftStraight = 0
plot(df$x, df$y, xlim = c(1,27), ylim = c(2,30), type = "S", xlab = "X-Position", ylab = "Y-Position", main = "Path")
i = 1
while(i <= length(df$x))
{
points(df$x[i], df$y[i])
i = i + 1
}
i = 1
while(i < length(df$x) - 1)
{
if(df$x[i + 2] - df$x[i] >= 1 & df$y[i + 2] - df$y[i] >= 1)
{
points(df$x[i + 1], df$y[i + 1], col = "red")
turnData = rbind(turnData, c("Up/Right", df$time[i + 2] - df$time[i]))
upRight = upRight + 1
}
else if(df$x[i + 2] - df$x[i] >= 1 & df$y[i + 2] - df$y[i] <= -1)
{
points(df$x[i + 1], df$y[i + 1], col = "orange")
turnData = rbind(turnData, c("Down/Right", df$time[i + 2] - df$time[i]))
downRight = downRight + 1
}
else if(df$x[i + 2] - df$x[i] <= -1 & df$y[i + 2] - df$y[i] >= 1)
{
points(df$x[i + 1], df$y[i + 1], col = "yellow")
turnData = rbind(turnData, c("Up/Left", df$time[i + 2] - df$time[i]))
upLeft = upLeft + 1
}
else if(df$x[i + 2] - df$x[i] <= -1 & df$y[i + 2] - df$y[i] <= -1)
{
points(df$x[i + 1], df$y[i + 1], col = "green")
turnData = rbind(turnData, c("Down/Left", df$time[i + 2] - df$time[i]))
downLeft = downLeft + 1
}
else if(df$x[i + 2] == df$x[i] & df$y[i + 2] == df$y[i])
{
if(df$y[i] > df$y[i + 1])
{
#Up turn
points(df$x[i + 1], df$y[i + 1], col = "blue")
turnData = rbind(turnData, c("Up/Straight", df$time[i + 2] - df$time[i]))
upStraight = upStraight + 1
}
else if(df$y[i] < df$y[i + 1])
{
#Down turn
points(df$x[i + 1], df$y[i + 1], col = "purple")
turnData = rbind(turnData, c("Down/Straight", df$time[i + 2] - df$time[i]))
downStraight = downStraight + 1
}
else if(df$x[i] > df$x[i + 1])
{
#Right turn
points(df$x[i + 1], df$y[i + 1], col = "pink")
turnData = rbind(turnData, c("Right/Straight", df$time[i + 2] - df$time[i]))
rightStraight = rightStraight + 1
}
else if(df$x[i] < df$x[i + 1])
{
#Left turn
points(df$x[i + 1], df$y[i + 1], col = "brown")
turnData = rbind(turnData, c("Left/Straight", df$time[i + 2] - df$time[i]))
leftStraight = leftStraight + 1
}
}
i = i + 1
}
legend(20, 30, legend = c("Up/right turn", "Down/right turn", "Up/left turn", "Down/left turn", "Up/straight turn", "Down/straight turn", "Right/straight turn", "Left/straight turn"), col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), lty = 1, cex = 0.75)
colnames(turnData) = c("turn", "time")
turnData$time = as.numeric(turnData$time)
turnData$turn = as.factor(turnData$turn)
#text(df$x, df$y, labels = df$time)
plot(turnData, main = "Temporal Distribution of Turns per Trial", ylab = "Time (seconds)", xlab = "Turn Type", col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), cex.axis = 0.55)
turnSum = data.frame("turn" = c("up/right", "down/right", "up/left", "down/left", "up/straight", "down/straight", "right/straight", "left/straight"), "number" = c(upRight, downRight, upLeft, downLeft, upStraight, downStraight, rightStraight, leftStraight), row.names = 1)
barplot(turnSum$number, main = "Turn Type Breakdown", xlab = "Turn Type", ylab = "Turn Counts", names.arg = c("Up/Right", "Down/Right", "Up/Left", "Down/Left", "Up/Straight", "Down/Straight", "Right/Straight", "Left/Straight"), col = c("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown"), axes = TRUE, cex.names = 0.55)
finalTime = length(df$time)
finalData = rbind(finalData, df$time[finalTime])
colnames(finalData) = "Total Time (seconds)"
plot(finalData[,1], finalData$y, main = "Play Duration per Trial", xlab = "Trial", ylab = "Duration (seconds)")
aggregateTime = rbind(aggregateTime, mean(turnData$time))
colnames(aggregateTime) = "Average Turn Time (seconds)"
plot(aggregateTime[,1], aggregateTime$y, main = "Average Time Required to Turn", xlab = "Trial", ylab = "Duration (seconds)")
}
